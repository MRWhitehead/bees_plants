---
title: "make_json"
author: "Michael Whitehead"
format: html
editor: visual
---

## Import bee data and convert to .json format

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r load packages}
library(tidyverse)
```

```{r import csv and rename}
halictid <- read.csv('halictidae_batley.csv', fileEncoding="UTF-8-BOM")

halictid$datasource <- 'ausmus'

halictid <- rename(halictid, bee = Bee.species, flower.genus = Flower.genus, flower.species = Flower.species, flower.family = Flower.family, female = Females, male = Males)


```

```{r fix bee species variable}

cond1 <- ifelse(halictid$bee == '', TRUE, FALSE)


for(i in 1:nrow(halictid)){
  if(cond1[i] == TRUE){
    halictid$bee[i] <- halictid$bee[i-1]
  } else {
  halictid$bee[i] <- halictid$bee[i]
}
}

halictid <- halictid %>%
  filter(flower.genus != '')

```

```{r edit and create new flower species and total bees variables}

halictid <- halictid %>%
  mutate(flower.species = replace(flower.species, flower.species == '', 'sp'))

halictid$flower <- paste(halictid$flower.genus, halictid$flower.species)

halictid <- halictid %>% 
  rowwise() %>% 
  mutate(totalbees = sum(male,female, na.rm=TRUE))

```

```{r create bee genus and subgenus variables}
halictid$bee.genus <- gsub( " .*$", "", halictid$bee)

halictid$bee.subgenus <- gsub( ") .*", "\\1)", halictid$bee)
```

```{r convert to json fr force network}

links=data.frame(
  source=halictid$bee,
  target=halictid$flower,
  weight=halictid$totalbees
)

nodes=data.frame(
  id=halictid$bee
)


# Transform it in a graph format
library(igraph)
network=graph_from_data_frame(d=links, directed=FALSE)

# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)

# Save this file
write(data_json, "data.json")

```

```{r convert to json for bipartite flows}
library(jsonlite)


flows=data.frame(
  source=halictid$bee,
  target=halictid$flower,
  value=halictid$totalbees
)


beeflow_json <- toJSON(flows)
cat(beeflow_json)
write(beeflow_json, "flow.json")

```
